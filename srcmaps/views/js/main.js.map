{"version":3,"sources":["views/js/main.js"],"names":["getAdj","x","dark","colors","whimsy","shiny","noisy","apocalyptic","insulting","praise","scientific","scientific_default","getNoun","y","animals","professions","fantasy","music","horror","gross","everyday","jewelry","places","scifi","scifi_default","generator","adj","noun","adjectives","nouns","randomAdjective","parseInt","Math","random","length","randomNoun","name","capitalize","randomName","randomNumberAdj","randomNumberNoun","logAverageFrame","times","numberOfEntries","sum","i","duration","console","log","updatePositions","frame","scroll","document","body","scrollTop","sine","sin","phase","len","items","value","basicLeft","style","transform","pizzaIngredients","meats","nonMeats","cheeses","sauces","crusts","String","prototype","this","charAt","toUpperCase","slice","selectRandomMeat","randomMeat","floor","selectRandomNonMeat","randomNonMeat","selectRandomCheese","randomCheese","selectRandomSauce","randomSauce","selectRandomCrust","randomCrust","makeRandomPizza","pizza","numberOfMeats","numberOfNonMeats","numberOfCheeses","push","j","k","pizzaElementGenerator","container","imageContainer","image","descriptionContainer","ul","pizzaName","createElement","className","width","height","id","src","innerText","forEach","ingredient","li","appendChild","resizePizzas","size","changeSliderLabel","getElementById","innerHTML","determineDx","elem","oldWidth","offsetWidth","windowWidth","oldSize","dx","newSize","changePizzaSizes","allPizzas","getElementsByClassName","newwidth","window","performance","mark","measure","timeToResize","getEntriesByName","pizzasDiv","timeToGenerate","addEventListener","cols","s","top","querySelector"],"mappings":"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","file":"views/js/main.js","sourcesContent":["/*\r\nWelcome to the 60fps project! Your goal is to make Cam's Pizzeria website run\r\njank-free at 60 frames per second.\r\nThere are two major issues in this code that lead to sub-60fps performance. Can\r\nyou spot and fix both?\r\nBuilt into the code, you'll find a few instances of the User Timing API\r\n(window.performance), which will be console.log()ing frame rate data into the\r\nbrowser console. To learn more about User Timing API, check out:\r\nhttp://www.html5rocks.com/en/tutorials/webperformance/usertiming/\r\nCreator:\r\nCameron Pittman, Udacity Course Developer\r\ncameron *at* udacity *dot* com\r\n*/\r\n\r\n// As you may have realized, this website randomly generates pizzas.\r\n// Here are arrays of all possible pizza ingredients.\r\nvar pizzaIngredients = {};\r\npizzaIngredients.meats = [\r\n  \"Pepperoni\",\r\n  \"Sausage\",\r\n  \"Fennel Sausage\",\r\n  \"Spicy Sausage\",\r\n  \"Chicken\",\r\n  \"BBQ Chicken\",\r\n  \"Chorizo\",\r\n  \"Chicken Andouille\",\r\n  \"Salami\",\r\n  \"Tofu\",\r\n  \"Bacon\",\r\n  \"Canadian Bacon\",\r\n  \"Proscuitto\",\r\n  \"Italian Sausage\",\r\n  \"Ground Beef\",\r\n  \"Anchovies\",\r\n  \"Turkey\",\r\n  \"Ham\",\r\n  \"Venison\",\r\n  \"Lamb\",\r\n  \"Duck\",\r\n  \"Soylent Green\",\r\n  \"Carne Asada\",\r\n  \"Soppressata Picante\",\r\n  \"Coppa\",\r\n  \"Pancetta\",\r\n  \"Bresola\",\r\n  \"Lox\",\r\n  \"Guanciale\",\r\n  \"Chili\",\r\n  \"Beef Jerky\",\r\n  \"Pastrami\",\r\n  \"Kielbasa\",\r\n  \"Scallops\",\r\n  \"Filet Mignon\"\r\n];\r\npizzaIngredients.nonMeats = [\r\n  \"White Onions\",\r\n  \"Red Onions\",\r\n  \"Sauteed Onions\",\r\n  \"Green Peppers\",\r\n  \"Red Peppers\",\r\n  \"Banana Peppers\",\r\n  \"Ghost Peppers\",\r\n  \"Habanero Peppers\",\r\n  \"Jalapeno Peppers\",\r\n  \"Stuffed Peppers\",\r\n  \"Spinach\",\r\n  \"Tomatoes\",\r\n  \"Pineapple\",\r\n  \"Pear Slices\",\r\n  \"Apple Slices\",\r\n  \"Mushrooms\",\r\n  \"Arugula\",\r\n  \"Basil\",\r\n  \"Fennel\",\r\n  \"Rosemary\",\r\n  \"Cilantro\",\r\n  \"Avocado\",\r\n  \"Guacamole\",\r\n  \"Salsa\",\r\n  \"Swiss Chard\",\r\n  \"Kale\",\r\n  \"Sun Dried Tomatoes\",\r\n  \"Walnuts\",\r\n  \"Artichoke\",\r\n  \"Asparagus\",\r\n  \"Caramelized Onions\",\r\n  \"Mango\",\r\n  \"Garlic\",\r\n  \"Olives\",\r\n  \"Cauliflower\",\r\n  \"Polenta\",\r\n  \"Fried Egg\",\r\n  \"Zucchini\",\r\n  \"Hummus\"\r\n];\r\npizzaIngredients.cheeses = [\r\n  \"American Cheese\",\r\n  \"Swiss Cheese\",\r\n  \"Goat Cheese\",\r\n  \"Mozzarella Cheese\",\r\n  \"Parmesean Cheese\",\r\n  \"Velveeta Cheese\",\r\n  \"Gouda Cheese\",\r\n  \"Muenster Cheese\",\r\n  \"Applewood Cheese\",\r\n  \"Asiago Cheese\",\r\n  \"Bleu Cheese\",\r\n  \"Boursin Cheese\",\r\n  \"Brie Cheese\",\r\n  \"Cheddar Cheese\",\r\n  \"Chevre Cheese\",\r\n  \"Havarti Cheese\",\r\n  \"Jack Cheese\",\r\n  \"Pepper Jack Cheese\",\r\n  \"Gruyere Cheese\",\r\n  \"Limberger Cheese\",\r\n  \"Manchego Cheese\",\r\n  \"Marscapone Cheese\",\r\n  \"Pecorino Cheese\",\r\n  \"Provolone Cheese\",\r\n  \"Queso Cheese\",\r\n  \"Roquefort Cheese\",\r\n  \"Romano Cheese\",\r\n  \"Ricotta Cheese\",\r\n  \"Smoked Gouda\"\r\n];\r\npizzaIngredients.sauces = [\r\n  \"Red Sauce\",\r\n  \"Marinara\",\r\n  \"BBQ Sauce\",\r\n  \"No Sauce\",\r\n  \"Hot Sauce\"\r\n];\r\npizzaIngredients.crusts = [\r\n  \"White Crust\",\r\n  \"Whole Wheat Crust\",\r\n  \"Flatbread Crust\",\r\n  \"Stuffed Crust\"\r\n];\r\n\r\n// Name generator pulled from http://saturdaykid.com/usernames/generator.html\r\n// Capitalizes first letter of each word\r\nString.prototype.capitalize = function() {\r\n  return this.charAt(0).toUpperCase() + this.slice(1);\r\n};\r\n\r\n// Pulls adjective out of array using random number sent from generator\r\nfunction getAdj(x){\r\n  switch(x) {\r\n    case \"dark\":\r\n      var dark = [\"dark\",\"morbid\", \"scary\", \"spooky\", \"gothic\", \"deviant\", \"creepy\", \"sadistic\", \"black\", \"dangerous\", \"dejected\", \"haunted\",\r\n      \"morose\", \"tragic\", \"shattered\", \"broken\", \"sad\", \"melancholy\", \"somber\", \"dark\", \"gloomy\", \"homicidal\", \"murderous\", \"shady\", \"misty\",\r\n      \"dusky\", \"ghostly\", \"shadowy\", \"demented\", \"cursed\", \"insane\", \"possessed\", \"grotesque\", \"obsessed\"];\r\n      return dark;\r\n    case \"color\":\r\n      var colors = [\"blue\", \"green\", \"purple\", \"grey\", \"scarlet\", \"NeonGreen\", \"NeonBlue\", \"NeonPink\", \"HotPink\", \"pink\", \"black\", \"red\",\r\n      \"maroon\", \"silver\", \"golden\", \"yellow\", \"orange\", \"mustard\", \"plum\", \"violet\", \"cerulean\", \"brown\", \"lavender\", \"violet\", \"magenta\",\r\n      \"chestnut\", \"rosy\", \"copper\", \"crimson\", \"teal\", \"indigo\", \"navy\", \"azure\", \"periwinkle\", \"brassy\", \"verdigris\", \"veridian\", \"tan\",\r\n      \"raspberry\", \"beige\", \"sandy\", \"ElectricBlue\", \"white\", \"champagne\", \"coral\", \"cyan\"];\r\n      return colors;\r\n    case \"whimsical\":\r\n      var whimsy = [\"whimsical\", \"silly\", \"drunken\", \"goofy\", \"funny\", \"weird\", \"strange\", \"odd\", \"playful\", \"clever\", \"boastful\", \"breakdancing\",\r\n      \"hilarious\", \"conceited\", \"happy\", \"comical\", \"curious\", \"peculiar\", \"quaint\", \"quirky\", \"fancy\", \"wayward\", \"fickle\", \"yawning\", \"sleepy\",\r\n      \"cockeyed\", \"dizzy\", \"dancing\", \"absurd\", \"laughing\", \"hairy\", \"smiling\", \"perplexed\", \"baffled\", \"cockamamie\", \"vulgar\", \"hoodwinked\",\r\n      \"brainwashed\"];\r\n      return whimsy;\r\n    case \"shiny\":\r\n      var shiny = [\"sapphire\", \"opal\", \"silver\", \"gold\", \"platinum\", \"ruby\", \"emerald\", \"topaz\", \"diamond\", \"amethyst\", \"turquoise\",\r\n      \"starlit\", \"moonlit\", \"bronze\", \"metal\", \"jade\", \"amber\", \"garnet\", \"obsidian\", \"onyx\", \"pearl\", \"copper\", \"sunlit\", \"brass\", \"brassy\",\r\n      \"metallic\"];\r\n      return shiny;\r\n    case \"noisy\":\r\n      var noisy = [\"untuned\", \"loud\", \"soft\", \"shrieking\", \"melodious\", \"musical\", \"operatic\", \"symphonic\", \"dancing\", \"lyrical\", \"harmonic\",\r\n      \"orchestral\", \"noisy\", \"dissonant\", \"rhythmic\", \"hissing\", \"singing\", \"crooning\", \"shouting\", \"screaming\", \"wailing\", \"crying\", \"howling\",\r\n      \"yelling\", \"hollering\", \"caterwauling\", \"bawling\", \"bellowing\", \"roaring\", \"squealing\", \"beeping\", \"knocking\", \"tapping\", \"rapping\",\r\n      \"humming\", \"scatting\", \"whispered\", \"whispering\", \"rasping\", \"buzzing\", \"whirring\", \"whistling\", \"whistled\"];\r\n      return noisy;\r\n    case \"apocalyptic\":\r\n      var apocalyptic = [\"nuclear\", \"apocalyptic\", \"desolate\", \"atomic\", \"zombie\", \"collapsed\", \"grim\", \"fallen\", \"collapsed\", \"cannibalistic\",\r\n      \"radioactive\", \"toxic\", \"poisonous\", \"venomous\", \"disastrous\", \"grimy\", \"dirty\", \"undead\", \"bloodshot\", \"rusty\", \"glowing\", \"decaying\",\r\n      \"rotten\", \"deadly\", \"plagued\", \"decimated\", \"rotting\", \"putrid\", \"decayed\", \"deserted\", \"acidic\"];\r\n      return apocalyptic;\r\n    case \"insulting\":\r\n      var insulting = [\"stupid\", \"idiotic\", \"fat\", \"ugly\", \"hideous\", \"grotesque\", \"dull\", \"dumb\", \"lazy\", \"sluggish\", \"brainless\", \"slow\",\r\n      \"gullible\", \"obtuse\", \"dense\", \"dim\", \"dazed\", \"ridiculous\", \"witless\", \"daft\", \"crazy\", \"vapid\", \"inane\", \"mundane\", \"hollow\", \"vacuous\",\r\n      \"boring\", \"insipid\", \"tedious\", \"monotonous\", \"weird\", \"bizarre\", \"backward\", \"moronic\", \"ignorant\", \"scatterbrained\", \"forgetful\", \"careless\",\r\n      \"lethargic\", \"insolent\", \"indolent\", \"loitering\", \"gross\", \"disgusting\", \"bland\", \"horrid\", \"unseemly\", \"revolting\", \"homely\", \"deformed\",\r\n      \"disfigured\", \"offensive\", \"cowardly\", \"weak\", \"villainous\", \"fearful\", \"monstrous\", \"unattractive\", \"unpleasant\", \"nasty\", \"beastly\", \"snide\",\r\n      \"horrible\", \"syncophantic\", \"unhelpful\", \"bootlicking\"];\r\n      return insulting;\r\n    case \"praise\":\r\n      var praise = [\"beautiful\", \"intelligent\", \"smart\", \"genius\", \"ingenious\", \"gorgeous\", \"pretty\", \"witty\", \"angelic\", \"handsome\", \"graceful\",\r\n      \"talented\", \"exquisite\", \"enchanting\", \"fascinating\", \"interesting\", \"divine\", \"alluring\", \"ravishing\", \"wonderful\", \"magnificient\", \"marvelous\",\r\n      \"dazzling\", \"cute\", \"charming\", \"attractive\", \"nifty\", \"delightful\", \"superior\", \"amiable\", \"gentle\", \"heroic\", \"courageous\", \"valiant\", \"brave\",\r\n      \"noble\", \"daring\", \"fearless\", \"gallant\", \"adventurous\", \"cool\", \"enthusiastic\", \"fierce\", \"awesome\", \"radical\", \"tubular\", \"fearsome\",\r\n      \"majestic\", \"grand\", \"stunning\"];\r\n      return praise;\r\n    case \"scientific\":\r\n      var scientific = [\"scientific\", \"technical\", \"digital\", \"programming\", \"calculating\", \"formulating\", \"cyberpunk\", \"mechanical\", \"technological\",\r\n      \"innovative\", \"brainy\", \"chemical\", \"quantum\", \"astro\", \"space\", \"theoretical\", \"atomic\", \"electronic\", \"gaseous\", \"investigative\", \"solar\",\r\n      \"extinct\", \"galactic\"];\r\n      return scientific;\r\n    default:\r\n      var scientific_default = [\"scientific\", \"technical\", \"digital\", \"programming\", \"calculating\", \"formulating\", \"cyberpunk\", \"mechanical\", \"technological\",\r\n      \"innovative\", \"brainy\", \"chemical\", \"quantum\", \"astro\", \"space\", \"theoretical\", \"atomic\", \"electronic\", \"gaseous\", \"investigative\", \"solar\",\r\n      \"extinct\", \"galactic\"];\r\n      return scientific_default;\r\n  }\r\n}\r\n\r\n// Pulls noun out of array using random number sent from generator\r\nfunction getNoun(y) {\r\n  switch(y) {\r\n    case \"animals\":\r\n      var animals = [\"flamingo\", \"hedgehog\", \"owl\", \"elephant\", \"pussycat\", \"alligator\", \"dachsund\", \"poodle\", \"beagle\", \"crocodile\", \"kangaroo\",\r\n      \"wallaby\", \"woodpecker\", \"eagle\", \"falcon\", \"canary\", \"parrot\", \"parakeet\", \"hamster\", \"gerbil\", \"squirrel\", \"rat\", \"dove\", \"toucan\",\r\n      \"raccoon\", \"vulture\", \"peacock\", \"goldfish\", \"rook\", \"koala\", \"skunk\", \"goat\", \"rooster\", \"fox\", \"porcupine\", \"llama\", \"grasshopper\",\r\n      \"gorilla\", \"monkey\", \"seahorse\", \"wombat\", \"wolf\", \"giraffe\", \"badger\", \"lion\", \"mouse\", \"beetle\", \"cricket\", \"nightingale\",\r\n      \"hawk\", \"trout\", \"squid\", \"octopus\", \"sloth\", \"snail\", \"locust\", \"baboon\", \"lemur\", \"meerkat\", \"oyster\", \"frog\", \"toad\", \"jellyfish\",\r\n      \"butterfly\", \"caterpillar\", \"tiger\", \"hyena\", \"zebra\", \"snail\", \"pig\", \"weasel\", \"donkey\", \"penguin\", \"crane\", \"buzzard\", \"vulture\",\r\n      \"rhino\", \"hippopotamus\", \"dolphin\", \"sparrow\", \"beaver\", \"moose\", \"minnow\", \"otter\", \"bat\", \"mongoose\", \"swan\", \"firefly\", \"platypus\"];\r\n      return animals;\r\n    case \"profession\":\r\n      var professions = [\"doctor\", \"lawyer\", \"ninja\", \"writer\", \"samurai\", \"surgeon\", \"clerk\", \"artist\", \"actor\", \"engineer\", \"mechanic\",\r\n      \"comedian\", \"fireman\", \"nurse\", \"RockStar\", \"musician\", \"carpenter\", \"plumber\", \"cashier\", \"electrician\", \"waiter\", \"president\", \"governor\",\r\n      \"senator\", \"scientist\", \"programmer\", \"singer\", \"dancer\", \"director\", \"mayor\", \"merchant\", \"detective\", \"investigator\", \"navigator\", \"pilot\",\r\n      \"priest\", \"cowboy\", \"stagehand\", \"soldier\", \"ambassador\", \"pirate\", \"miner\", \"police\"];\r\n      return professions;\r\n    case \"fantasy\":\r\n      var fantasy = [\"centaur\", \"wizard\", \"gnome\", \"orc\", \"troll\", \"sword\", \"fairy\", \"pegasus\", \"halfling\", \"elf\", \"changeling\", \"ghost\",\r\n      \"knight\", \"squire\", \"magician\", \"witch\", \"warlock\", \"unicorn\", \"dragon\", \"wyvern\", \"princess\", \"prince\", \"king\", \"queen\", \"jester\",\r\n      \"tower\", \"castle\", \"kraken\", \"seamonster\", \"mermaid\", \"psychic\", \"seer\", \"oracle\"];\r\n      return fantasy;\r\n    case \"music\":\r\n      var music = [\"violin\", \"flute\", \"bagpipe\", \"guitar\", \"symphony\", \"orchestra\", \"piano\", \"trombone\", \"tuba\", \"opera\", \"drums\",\r\n      \"harpsichord\", \"harp\", \"harmonica\", \"accordion\", \"tenor\", \"soprano\", \"baritone\", \"cello\", \"viola\", \"piccolo\", \"ukelele\", \"woodwind\", \"saxophone\",\r\n      \"bugle\", \"trumpet\", \"sousaphone\", \"cornet\", \"stradivarius\", \"marimbas\", \"bells\", \"timpani\", \"bongos\", \"clarinet\", \"recorder\", \"oboe\", \"conductor\",\r\n      \"singer\"];\r\n      return music;\r\n    case \"horror\":\r\n      var horror = [\"murderer\", \"chainsaw\", \"knife\", \"sword\", \"murder\", \"devil\", \"killer\", \"psycho\", \"ghost\", \"monster\", \"godzilla\", \"werewolf\",\r\n      \"vampire\", \"demon\", \"graveyard\", \"zombie\", \"mummy\", \"curse\", \"death\", \"grave\", \"tomb\", \"beast\", \"nightmare\", \"frankenstein\", \"specter\",\r\n      \"poltergeist\", \"wraith\", \"corpse\", \"scream\", \"massacre\", \"cannibal\", \"skull\", \"bones\", \"undertaker\", \"zombie\", \"creature\", \"mask\", \"psychopath\",\r\n      \"fiend\", \"satanist\", \"moon\", \"fullMoon\"];\r\n      return horror;\r\n    case \"gross\":\r\n      var gross = [\"slime\", \"bug\", \"roach\", \"fluid\", \"pus\", \"booger\", \"spit\", \"boil\", \"blister\", \"orifice\", \"secretion\", \"mucus\", \"phlegm\",\r\n      \"centipede\", \"beetle\", \"fart\", \"snot\", \"crevice\", \"flatulence\", \"juice\", \"mold\", \"mildew\", \"germs\", \"discharge\", \"toilet\", \"udder\", \"odor\", \"substance\",\r\n      \"fluid\", \"moisture\", \"garbage\", \"trash\", \"bug\"];\r\n      return gross;\r\n    case \"everyday\":\r\n      var everyday = [\"mirror\", \"knife\", \"fork\", \"spork\", \"spoon\", \"tupperware\", \"minivan\", \"suburb\", \"lamp\", \"desk\", \"stereo\", \"television\", \"TV\",\r\n      \"book\", \"car\", \"truck\", \"soda\", \"door\", \"video\", \"game\", \"computer\", \"calender\", \"tree\", \"plant\", \"flower\", \"chimney\", \"attic\", \"kitchen\",\r\n      \"garden\", \"school\", \"wallet\", \"bottle\"];\r\n      return everyday;\r\n    case \"jewelry\":\r\n      var jewelry = [\"earrings\", \"ring\", \"necklace\", \"pendant\", \"choker\", \"brooch\", \"bracelet\", \"cameo\", \"charm\", \"bauble\", \"trinket\", \"jewelry\",\r\n      \"anklet\", \"bangle\", \"locket\", \"finery\", \"crown\", \"tiara\", \"blingBling\", \"chain\", \"rosary\", \"jewel\", \"gemstone\", \"beads\", \"armband\", \"pin\",\r\n      \"costume\", \"ornament\", \"treasure\"];\r\n      return jewelry;\r\n    case \"places\":\r\n      var places = [\"swamp\", \"graveyard\", \"cemetery\", \"park\", \"building\", \"house\", \"river\", \"ocean\", \"sea\", \"field\", \"forest\", \"woods\", \"neighborhood\",\r\n      \"city\", \"town\", \"suburb\", \"country\", \"meadow\", \"cliffs\", \"lake\", \"stream\", \"creek\", \"school\", \"college\", \"university\", \"library\", \"bakery\",\r\n      \"shop\", \"store\", \"theater\", \"garden\", \"canyon\", \"highway\", \"restaurant\", \"cafe\", \"diner\", \"street\", \"road\", \"freeway\", \"alley\"];\r\n      return places;\r\n    case \"scifi\":\r\n      var scifi = [\"robot\", \"alien\", \"raygun\", \"spaceship\", \"UFO\", \"rocket\", \"phaser\", \"astronaut\", \"spaceman\", \"planet\", \"star\", \"galaxy\",\r\n      \"computer\", \"future\", \"timeMachine\", \"wormHole\", \"timeTraveler\", \"scientist\", \"invention\", \"martian\", \"pluto\", \"jupiter\", \"saturn\", \"mars\",\r\n      \"quasar\", \"blackHole\", \"warpDrive\", \"laser\", \"orbit\", \"gears\", \"molecule\", \"electron\", \"neutrino\", \"proton\", \"experiment\", \"photon\", \"apparatus\",\r\n      \"universe\", \"gravity\", \"darkMatter\", \"constellation\", \"circuit\", \"asteroid\"];\r\n      return scifi;\r\n    default:\r\n      var scifi_default = [\"robot\", \"alien\", \"raygun\", \"spaceship\", \"UFO\", \"rocket\", \"phaser\", \"astronaut\", \"spaceman\", \"planet\", \"star\", \"galaxy\",\r\n      \"computer\", \"future\", \"timeMachine\", \"wormHole\", \"timeTraveler\", \"scientist\", \"invention\", \"martian\", \"pluto\", \"jupiter\", \"saturn\", \"mars\",\r\n      \"quasar\", \"blackHole\", \"warpDrive\", \"laser\", \"orbit\", \"gears\", \"molecule\", \"electron\", \"neutrino\", \"proton\", \"experiment\", \"photon\", \"apparatus\",\r\n      \"universe\", \"gravity\", \"darkMatter\", \"constellation\", \"circuit\", \"asteroid\"];\r\n      return scifi_default;\r\n  }\r\n}\r\n\r\nvar adjectives = [\"dark\", \"color\", \"whimsical\", \"shiny\", \"noise\", \"apocalyptic\", \"insulting\", \"praise\", \"scientific\"];  // types of adjectives for pizza titles\r\nvar nouns = [\"animals\", \"everyday\", \"fantasy\", \"gross\", \"horror\", \"jewelry\", \"places\", \"scifi\"];                        // types of nouns for pizza titles\r\n\r\n// Generates random numbers for getAdj and getNoun functions and returns a new pizza name\r\nfunction generator(adj, noun) {\r\n  var adjectives = getAdj(adj);\r\n  var nouns = getNoun(noun);\r\n  var randomAdjective = parseInt(Math.random() * adjectives.length);\r\n  var randomNoun = parseInt(Math.random() * nouns.length);\r\n  var name = \"The \" + adjectives[randomAdjective].capitalize() + \" \" + nouns[randomNoun].capitalize();\r\n  return name;\r\n}\r\n\r\n// Chooses random adjective and random noun\r\nfunction randomName() {\r\n  var randomNumberAdj = parseInt(Math.random() * adjectives.length);\r\n  var randomNumberNoun = parseInt(Math.random() * nouns.length);\r\n  return generator(adjectives[randomNumberAdj], nouns[randomNumberNoun]);\r\n}\r\n\r\n// These functions return a string of a random ingredient from each respective category of ingredients.\r\nvar selectRandomMeat = function() {\r\n  var randomMeat = pizzaIngredients.meats[Math.floor((Math.random() * pizzaIngredients.meats.length))];\r\n  return randomMeat;\r\n};\r\n\r\nvar selectRandomNonMeat = function() {\r\n  var randomNonMeat = pizzaIngredients.nonMeats[Math.floor((Math.random() * pizzaIngredients.nonMeats.length))];\r\n  return randomNonMeat;\r\n};\r\n\r\nvar selectRandomCheese = function() {\r\n  var randomCheese = pizzaIngredients.cheeses[Math.floor((Math.random() * pizzaIngredients.cheeses.length))];\r\n  return randomCheese;\r\n};\r\n\r\nvar selectRandomSauce = function() {\r\n  var randomSauce = pizzaIngredients.sauces[Math.floor((Math.random() * pizzaIngredients.sauces.length))];\r\n  return randomSauce;\r\n};\r\n\r\nvar selectRandomCrust = function() {\r\n  var randomCrust = pizzaIngredients.crusts[Math.floor((Math.random() * pizzaIngredients.crusts.length))];\r\n  return randomCrust;\r\n};\r\n\r\n// Returns a string with random pizza ingredients nested inside <li> tags\r\nvar makeRandomPizza = function() {\r\n  var pizza = [];\r\n\r\n  var numberOfMeats = Math.floor((Math.random() * 4));\r\n  var numberOfNonMeats = Math.floor((Math.random() * 3));\r\n  var numberOfCheeses = Math.floor((Math.random() * 2));\r\n\r\n  for (var i = 0; i < numberOfMeats; i++) {\r\n    pizza.push(selectRandomMeat());\r\n  }\r\n\r\n  for (var j = 0; j < numberOfNonMeats; j++) {\r\n    pizza.push(selectRandomNonMeat());\r\n  }\r\n\r\n  for (var k = 0; k < numberOfCheeses; k++) {\r\n    pizza.push(selectRandomCheese());\r\n  }\r\n\r\n  pizza.push(selectRandomSauce());\r\n  pizza.push(selectRandomCrust());\r\n\r\n  return pizza;\r\n};\r\n\r\n// returns a DOM element for each pizza\r\nvar pizzaElementGenerator = function(i) {\r\n  var pizzaName = randomName();\r\n  var pizza = makeRandomPizza();\r\n\r\n  var container,             // contains pizza title, image and list of ingredients\r\n      imageContainer,        // contains the pizza image\r\n      image,                 // the pizza image itself\r\n      descriptionContainer,  // contains the pizza title and list of ingredients\r\n      name,                  // the pizza name itself\r\n      ul,                    // the list of ingredients\r\n      li;                    // each ingredient\r\n\r\n  container  = document.createElement(\"div\");\r\n  imageContainer = document.createElement(\"div\");\r\n  image = document.createElement(\"img\");\r\n  descriptionContainer = document.createElement(\"div\");\r\n  name = document.createElement(\"h4\");\r\n  ul = document.createElement(\"ul\");\r\n\r\n  container.className = \"randomPizzaContainer\";\r\n  container.style.width = \"33.33%\";\r\n  container.style.height = \"325px\";\r\n  container.id = \"pizza\" + i;                // gives each pizza element a unique id\r\n  imageContainer.className = \"col-md-6\";\r\n  image.src = \"images/pizza.png\";\r\n  image.className = \"img-responsive\";\r\n\r\n  descriptionContainer.className = \"col-md-6\";\r\n  name.innerText = pizzaName;\r\n  // Because innerText is much faster I removed ingredientItemizer()\r\n  // and replaced with this loop that creates a li item for each ingredient\r\n  // this cut time to generate pizzas by all most 50%\r\n  pizza.forEach(function(ingredient) {\r\n    var li = document.createElement(\"li\");\r\n    li.innerText = ingredient;\r\n    ul.appendChild(li);\r\n  });\r\n\r\n  imageContainer.appendChild(image);\r\n  container.appendChild(imageContainer);\r\n  descriptionContainer.appendChild(name);\r\n  descriptionContainer.appendChild(ul);\r\n  container.appendChild(descriptionContainer);\r\n\r\n  return container;\r\n};\r\n\r\n// resizePizzas(size) is called when the slider in the \"Our Pizzas\" section of the website moves.\r\nvar resizePizzas = function(size) {\r\n  window.performance.mark(\"mark_start_resize\");   // User Timing API function\r\n\r\n  // Changes the value for the size of the pizza above the slider\r\n  function changeSliderLabel(size) {\r\n    switch(size) {\r\n      case \"1\":\r\n        document.getElementById(\"pizzaSize\").innerHTML = \"Small\";\r\n        return 0.25;\r\n      case \"2\":\r\n        document.getElementById(\"pizzaSize\").innerHTML = \"Medium\";\r\n        return 0.3333;\r\n      case \"3\":\r\n        document.getElementById(\"pizzaSize\").innerHTML = \"Large\";\r\n        return 0.5;\r\n      default:\r\n        console.log(\"bug in changeSliderLabel\");\r\n    }\r\n  }\r\n  // Moved from determineDx to get rid of redundant switch/case\r\n  var newSize = changeSliderLabel(size);\r\n\r\n   // Returns the size difference to change a pizza element from one size to another. Called by changePizzaSlices(size).\r\n  function determineDx (elem, size) {\r\n    var oldWidth = elem.offsetWidth;\r\n    var windowWidth = document.getElementById(\"randomPizzas\").offsetWidth;\r\n    var oldSize = oldWidth / windowWidth;\r\n\r\n    var dx = (newSize - oldSize) * windowWidth;\r\n\r\n    return dx;\r\n  }\r\n\r\n  // Iterates through pizza elements on the page and changes their widths\r\n  function changePizzaSizes(size) {\r\n    var allPizzas = document.getElementsByClassName(\"randomPizzaContainer\");\r\n    var dx = determineDx(allPizzas[0], size);\r\n    var newwidth = (allPizzas[0].offsetWidth + dx) + 'px';\r\n    for (var i = 0; i < allPizzas.length; i++) {\r\n      allPizzas[i].style.width = newwidth;\r\n    }\r\n  }\r\n\r\n  changePizzaSizes(size);\r\n\r\n  // User Timing API is awesome\r\n  window.performance.mark(\"mark_end_resize\");\r\n  window.performance.measure(\"measure_pizza_resize\", \"mark_start_resize\", \"mark_end_resize\");\r\n  var timeToResize = window.performance.getEntriesByName(\"measure_pizza_resize\");\r\n  console.log(\"Time to resize pizzas: \" + timeToResize[0].duration + \"ms\");\r\n};\r\n\r\nwindow.performance.mark(\"mark_start_generating\"); // collect timing data\r\n\r\nvar pizzasDiv = document.getElementById(\"randomPizzas\");\r\n// This for-loop actually creates and appends all of the pizzas when the page loads\r\nfor (var i = 2; i < 100; i++) {\r\n  pizzasDiv.appendChild(pizzaElementGenerator(i));\r\n}\r\n\r\n\r\n// User Timing API again. These measurements tell you how long it took to generate the initial pizzas\r\nwindow.performance.mark(\"mark_end_generating\");\r\nwindow.performance.measure(\"measure_pizza_generation\", \"mark_start_generating\", \"mark_end_generating\");\r\nvar timeToGenerate = window.performance.getEntriesByName(\"measure_pizza_generation\");\r\nconsole.log(\"Time to generate pizzas on load: \" + timeToGenerate[0].duration + \"ms\");\r\n\r\n// Iterator for number of times the pizzas in the background have scrolled.\r\n// Used by updatePositions() to decide when to log the average time per frame\r\nvar frame = 0;\r\n\r\n// Logs the average amount of time per 10 frames needed to move the sliding background pizzas on scroll.\r\nfunction logAverageFrame(times) {   // times is the array of User Timing measurements from updatePositions()\r\n  var numberOfEntries = times.length;\r\n  var sum = 0;\r\n  for (var i = numberOfEntries - 1; i > numberOfEntries - 11; i--) {\r\n    sum = sum + times[i].duration;\r\n  }\r\n  console.log(\"Average time to generate last 10 frames: \" + sum / 10 + \"ms\");\r\n}\r\n\r\n\r\n// Moves the sliding background pizzas based on scroll position\r\nvar items = document.getElementsByClassName('mover');\r\n// items outside function because if updating them, why keep getting them\r\n\r\nfunction updatePositions() {\r\n  frame++;\r\n  // User timing API code - here for further testing\r\n\r\n  // window.performance.mark(\"mark_start_frame\");\r\n  var scroll = document.body.scrollTop / 1250;\r\n  var sine = Math.sin;\r\n  // An array of phase values moved from for loop for better performance\r\n  var phase = [sine(scroll + 0),\r\n               sine(scroll + 1),\r\n               sine(scroll + 2),\r\n               sine(scroll + 3),\r\n               sine(scroll + 4)\r\n              ]\r\n  for (var i = 0, len = items.length; i < len; i++) {\r\n    var value = items[i].basicLeft + 100 * phase[i % 5] + 'px';\r\n    items[i].style.transform = \"translateX(\" + value + \")\";\r\n  }\r\n\r\n  // User timing API code - Here for further testing\r\n\r\n  // window.performance.mark(\"mark_end_frame\");\r\n  // window.performance.measure(\"measure_frame_duration\", \"mark_start_frame\", \"mark_end_frame\");\r\n  // if (frame % 10 === 0) {\r\n  //   var timesToUpdatePosition = window.performance.getEntriesByName(\"measure_frame_duration\");\r\n  //   logAverageFrame(timesToUpdatePosition);\r\n  // }\r\n}\r\n\r\n// runs updatePositions on scroll\r\nwindow.addEventListener('scroll', updatePositions);\r\n\r\n// Generates the sliding pizzas when the page loads.\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  var cols = 8;\r\n  var s = 256;\r\n  for (var i = 0; i < 35; i++) {\r\n    var elem = document.createElement('img');\r\n    elem.className = 'mover';\r\n    elem.src = \"images/pizza.png\";\r\n    elem.style.height = \"100px\";\r\n    elem.style.width = \"73.333px\";\r\n    elem.basicLeft = (i % cols) * s;\r\n    elem.style.top = (Math.floor(i / cols) * s) + 'px';\r\n    document.querySelector(\"#movingPizzas1\").appendChild(elem);\r\n  }\r\n  updatePositions();\r\n});"],"sourceRoot":"/source/"}